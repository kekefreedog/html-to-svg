{"version":3,"file":"html-to-svg.umd.js","sources":["../src/utils/dom-walk.js","../src/utils/dom-get-zindex.js","../src/utils/dom-render-svg.js","../src/renderers/canvas.js","../src/renderers/div.js","../src/renderers/svg.js","../src/renderers/text.js","../src/renderers/image.js","../src/index.js","../src/utils/range-get-client-rects.js"],"sourcesContent":["async function walk (element, callback, { sort = () => 1 } = {}) {\n  if (!await callback(element)) return\n\n  for (const child of Array.from(element.children).sort(sort)) {\n    await walk(child, callback, { sort })\n  }\n}\n\nexport default walk\n","export default el => {\n  const zindex = window.getComputedStyle(el).getPropertyValue('z-index')\n  return zindex === 'auto' ? 0 : parseInt(zindex ?? 0)\n}\n","export default function (name, props = {}, parent) {\n  const NS = 'http://www.w3.org/2000/svg'\n\n  const element = document.createElementNS(NS, name)\n  if (name === 'svg') element.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', NS)\n  for (const key in props) {\n    if (props[key] === null || props[key] === undefined) continue\n    element.setAttribute(key, props[key])\n  }\n\n  if (parent) parent.appendChild(element)\n  return element\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: element.toDataURL('image/png')\n})\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n\n  // TODO background-image\n  // TODO border\n  const backgroundColor = style.getPropertyValue('background-color')\n\n  // Skip visually empty blocks\n  if (!backgroundColor || backgroundColor === 'none' || backgroundColor === 'transparent') return\n  if (backgroundColor.startsWith('rgba')) {\n    const rgba = backgroundColor.match(/[\\d.]+/g)\n    if (rgba[3] === '0') return\n  }\n\n  return $('rect', {\n    x,\n    y,\n    width,\n    height,\n    fill: backgroundColor,\n    rx: parseInt(style.getPropertyValue('border-radius')) || null\n  })\n}\n","/* global FileReader, XMLSerializer, btoa, XMLHttpRequest */\nimport $ from '../utils/dom-render-svg'\n\nexport default ({ cache }) => async (element, { x, y, width, height, style }, {\n  rasterizeNestedSVG = true\n} = {}) => {\n  // Convert all image to dataURL to maximizime compatibility\n  for (const image of element.querySelectorAll('image[href]')) {\n    const src = image.getAttribute('href')\n\n    if (!cache.has(src)) {\n      // Fetch blob from image src\n      const blob = await new Promise(resolve => {\n        const request = new XMLHttpRequest()\n        request.open('GET', src, true)\n        request.responseType = 'blob'\n        request.onload = () => resolve(request.response)\n        request.send()\n      })\n\n      // Convert blob to dataURL using the FileReader API\n      const dataURL = await new Promise(resolve => {\n        const reader = new FileReader()\n        reader.onload = e => resolve(e.target.result)\n        reader.readAsDataURL(blob)\n      })\n\n      // Cache dataURL\n      cache.set(src, dataURL)\n    }\n\n    image.setAttribute('href', cache.get(src))\n  }\n\n  return rasterizeNestedSVG\n    ? $('image', {\n      x,\n      y,\n      width,\n      height,\n      href: 'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(element))\n    })\n    : (() => {\n        const svg = $('svg', {\n          x,\n          y,\n          width,\n          height,\n          viewbox: `0 0 ${width} ${height}`\n        })\n\n        svg.innerHTML = element.innerHTML\n        return svg\n      })()\n}\n","// TODO text-decoration\n\nimport $ from '../utils/dom-render-svg'\n\nconst matchFont = s => ({ family, style = 'normal', weight = '400' } = {}) =>\n  family === (s.getPropertyValue('font-family') ?? '').replace(/['\"]/g, '') &&\n    style === (s.getPropertyValue('font-style') ?? 'normal') &&\n    weight === (s.getPropertyValue('font-weight') ?? '400')\n\nexport default ({\n  debug,\n  fonts\n}) => async (string, { x, y, width, height, style }) => {\n  if (!string) return\n\n  const g = $('g')\n\n  // Find font\n  const font = fonts.find(matchFont(style))\n  if (!font) throw new Error(`Cannot find font '${style.getPropertyValue('font-family')} ${style.getPropertyValue('font-style')} ${style.getPropertyValue('font-weight')}'`)\n\n  // Extract font metrics\n  const { unitsPerEm } = font.opentype\n  const ascender = font.opentype.tables.hhea.ascender\n  const descender = font.opentype.tables.hhea.descender\n\n  // Extract CSS props\n  const letterSpacing = style.getPropertyValue('letter-spacing')\n  const fontSize = parseFloat(style.getPropertyValue('font-size'))\n\n  // Compute metrics\n  const lineBox = (ascender - descender) / unitsPerEm\n  const leading = (fontSize * lineBox) - Math.abs(descender / unitsPerEm) * fontSize\n\n  // Render various metrics for debug\n  line('start', 0, { orientation: 'vertical', stroke: 'red' })\n  line('end', width, { orientation: 'vertical', stroke: 'red' })\n  line('leading', leading, { stroke: '#4b96ff' })\n\n  if (letterSpacing !== 'normal') {\n    // Render letter by letter in case of non-default letter-spacing\n    for (const c of string) {\n      $('path', {\n        d: font.opentype.getPath(c, x, y + leading, fontSize).toPathData(3),\n        fill: style.getPropertyValue('color')\n      }, g)\n      x += font.opentype.getAdvanceWidth(c, fontSize) + parseFloat(letterSpacing)\n    }\n  } else {\n    // Render string\n    $('path', {\n      d: font.opentype.getPath(string, x, y + leading, fontSize, {\n        features: {\n          // TODO extract from CSS props\n          liga: true,\n          rlig: true\n        }\n      }).toPathData(3),\n      fill: style.getPropertyValue('color')\n    }, g)\n  }\n\n  return g\n\n  function line (title, v, { orientation = 'horizontal', stroke = 'black' } = {}) {\n    return debug && $('line', {\n      title,\n      'data-value': v,\n      x1: orientation === 'horizontal' ? x : x + v,\n      x2: orientation === 'horizontal' ? x + width : x + v,\n      y1: orientation === 'horizontal' ? y + v : y,\n      y2: orientation === 'horizontal' ? y + v : y + height,\n      stroke,\n      class: 'debug'\n    }, g)\n  }\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n  if (!element.src) return\n\n  return $('image', {\n    x,\n    y,\n    width,\n    height,\n    href: element.src\n  })\n}\n","/* global Node */\nimport Opentype from 'opentype.js'\nimport walk from './utils/dom-walk'\nimport getZIndex from './utils/dom-get-zindex'\nimport getClientRects from './utils/range-get-client-rects'\n\nimport $ from './utils/dom-render-svg'\nimport * as RENDERERS from './renderers'\n\nexport default function ({\n  debug = false,\n  ignore = '',\n  fonts = []\n} = {}) {\n  const cache = new Map()\n\n  // Init curried renderers\n  const renderers = {}\n  for (const k in RENDERERS) {\n    renderers[k] = RENDERERS[k]({ debug, fonts, cache })\n  }\n\n  return {\n    get cache () { return cache },\n\n    // Preload all fonts before resolving\n    preload: async function () {\n      for (const font of fonts) {\n        if (font.opentype) continue\n        font.opentype = await new Promise(resolve => {\n          Opentype.load(font.url, (error, font) => {\n            if (error) throw error\n            resolve(font)\n          })\n        })\n      }\n    },\n\n    // Clear cache and delete all resources\n    destroy: function () {\n      cache.clear()\n      for (const font of fonts) delete font.opentype\n    },\n\n    // Render the HTML container as a shadow SVG\n    render: async function (container, options = {}, transform = () => {}) {\n      const viewBox = container.getBoundingClientRect()\n\n      // Create the SVG container\n      const svg = $('svg', {\n        viewBox: `0 0 ${viewBox.width} ${viewBox.height}`,\n        width: viewBox.width,\n        height: viewBox.height,\n        preserveAspectRatio: 'none'\n      })\n\n      // Set the parent to the current SVG.\n      // This parent will change during the walk\n      let parent = svg\n\n      // Render every children\n      await walk(container, async element => {\n        if (ignore && element !== container && element.matches(ignore)) return\n\n        // TODO opacity\n        const style = window.getComputedStyle(element)\n        const { x, y, width, height } = element.getBoundingClientRect()\n\n        // Handle CSS clip-path property\n        const clipPathValue = style.getPropertyValue('clip-path')\n        if (clipPathValue !== 'none') {\n          parent = $('g', null, svg)\n          // WARNING: CSS clip-path implementation is not done yet on arnaudjuracek/svg-to-pdf\n          parent.setAttribute('style', `clip-path: ${clipPathValue.replace(/\"/g, \"'\")}`)\n        }\n\n        // Render element\n        const render = renderers[element.tagName] ?? renderers.div\n        let rendered = await render(element, {\n          x: x - viewBox.x,\n          y: y - viewBox.y,\n          width,\n          height,\n          style\n        }, options)\n\n        rendered = await transform(element, rendered)\n        if (rendered) parent.appendChild(rendered)\n\n        // Render text nodes inside the element\n        if (element.innerText) {\n          for (const node of element.childNodes) {\n            if (node.nodeType !== Node.TEXT_NODE) continue\n            if (!node.textContent.length) continue\n\n            // Text interface does not provide a .innerText method, which would be\n            // more appropriate than textContent as it skips non-rendered whitespaces\n            // Splitting white-space leading Text trick the browser to recompute\n            // the layout itself, dealing with implicit space between adjacent nodes\n            if (/^\\s/.test(node.textContent)) {\n              node.splitText(1)\n              continue\n            }\n\n            for (const { rect, fragment } of getClientRects(node)) {\n              try {\n                let text = await renderers.text(fragment.textContent.trimEnd(), {\n                  x: rect.x - viewBox.x,\n                  y: rect.y - viewBox.y,\n                  width: rect.width,\n                  height: rect.height,\n                  style\n                }, options)\n\n                text = await transform(element, text)\n                if (text) parent.appendChild(text)\n              } catch (error) {\n                // TODO[improve] error handling\n                console.warn(new Error(`Rendering failed for the following text: '${fragment.textContent}'`, { cause: error }))\n                console.warn(error)\n              }\n            }\n          }\n        }\n\n        // Continue walking\n        return true\n      }, {\n        sort: (a, b) => {\n          a.zIndex = a.zIndex ?? getZIndex(a)\n          b.zIndex = b.zIndex ?? getZIndex(b)\n          return a.zIndex - b.zIndex\n        }\n      })\n\n      return svg\n    }\n  }\n}\n","/* global DocumentFragment */\n\n// Return Range.clientRects with their corresponding DocumentFragment\nexport default function (node, text = node.innerText || node.textContent) {\n  const range = document.createRange()\n\n  const rects = []\n  for (let i = 0; i < node.length; i++) {\n    range.setStart(node, 0)\n    range.setEnd(node, (i + 1))\n\n    const clientRects = range.getClientRects()\n\n    const index = clientRects.length - 1\n    rects[index] = rects[index] ?? { text: '' }\n    rects[index].rect = clientRects[index]\n    rects[index].text += text.charAt(i)\n  }\n\n  return rects.map(rect => {\n    rect.fragment = new DocumentFragment()\n    rect.fragment.textContent = rect.text\n    return rect\n  })\n}\n"],"names":["_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","walk","element","_temp2","_ref$sort","sort","Promise","resolve","_callback","_temp","target","body","check","step","reject","_cycle","next","done","return","_fixup","TypeError","values","i","length","push","array","_forTo","_forOf","Array","from","children","child","getZIndex","el","zindex","window","getComputedStyle","getPropertyValue","parseInt","$","name","props","parent","NS","document","createElementNS","key","setAttributeNS","setAttribute","appendChild","div","_ref","_ref2","x","y","width","height","style","backgroundColor","startsWith","match","fill","rx","svg","cache","_temp5","_ref3$rasterizeNested","rasterizeNestedSVG","_temp4","href","btoa","XMLSerializer","serializeToString","viewbox","innerHTML","_temp3","querySelectorAll","image","get","src","getAttribute","has","request","XMLHttpRequest","open","responseType","onload","response","send","blob","reader","FileReader","readAsDataURL","dataURL","set","debug","fonts","string","_ref3","line","title","_ref4","_ref4$orientation","orientation","_ref4$stroke","stroke","x1","x2","y1","y2","class","g","font","find","_s$getPropertyValue","_s$getPropertyValue2","_s$getPropertyValue3","_ref$style","_ref$weight","weight","family","replace","Error","unitsPerEm","opentype","ascender","tables","hhea","descender","letterSpacing","fontSize","parseFloat","leading","Math","abs","_step","_iterator","_createForOfIteratorHelperLoose","c","d","getPath","toPathData","getAdvanceWidth","features","liga","rlig","toDataURL","_ref$debug","_ref$ignore","ignore","_ref$fonts","Map","renderers","k","RENDERERS","preload","Opentype","load","url","error","_Promise","destroy","clear","render","container","options","transform","viewBox","getBoundingClientRect","preserveAspectRatio","_renderers$element$ta","matches","_element$getBoundingC","clipPathValue","tagName","rendered","_transform","innerText","childNodes","node","nodeType","Node","TEXT_NODE","textContent","test","text","range","createRange","rects","_rects$index","setStart","setEnd","clientRects","getClientRects","index","rect","charAt","map","fragment","DocumentFragment","recover","trimEnd","_transform2","_catch","console","warn","cause","splitText","a","b","_a$zIndex","_b$zIndex","zIndex"],"mappings":"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"}