{"version":3,"file":"html-to-svg.js","sources":["../src/utils/dom-walk.js","../src/utils/dom-get-zindex.js","../src/utils/dom-render-svg.js","../src/renderers/canvas.js","../src/renderers/div.js","../src/renderers/svg.js","../src/renderers/text.js","../src/renderers/image.js","../src/index.js","../src/utils/range-get-client-rects.js"],"sourcesContent":["async function walk (element, callback, { sort = () => 1 } = {}) {\n  if (!await callback(element)) return\n\n  for (const child of Array.from(element.children).sort(sort)) {\n    await walk(child, callback, { sort })\n  }\n}\n\nexport default walk\n","export default el => {\n  const zindex = window.getComputedStyle(el).getPropertyValue('z-index')\n  return zindex === 'auto' ? 0 : parseInt(zindex ?? 0)\n}\n","export default function (name, props = {}, parent) {\n  const NS = 'http://www.w3.org/2000/svg'\n\n  const element = document.createElementNS(NS, name)\n  if (name === 'svg') element.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', NS)\n  for (const key in props) {\n    if (props[key] === null || props[key] === undefined) continue\n    element.setAttribute(key, props[key])\n  }\n\n  if (parent) parent.appendChild(element)\n  return element\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: element.toDataURL('image/png')\n})\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n\n  // TODO background-image\n  // TODO border\n  const backgroundColor = style.getPropertyValue('background-color')\n\n  // Skip visually empty blocks\n  if (!backgroundColor || backgroundColor === 'none' || backgroundColor === 'transparent') return\n  if (backgroundColor.startsWith('rgba')) {\n    const rgba = backgroundColor.match(/[\\d.]+/g)\n    if (rgba[3] === '0') return\n  }\n\n  return $('rect', {\n    x,\n    y,\n    width,\n    height,\n    fill: backgroundColor,\n    rx: parseInt(style.getPropertyValue('border-radius')) || null\n  })\n}\n","/* global XMLSerializer, btoa */\nimport $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: 'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(element))\n})\n","// TODO text-decoration\n\nimport $ from '../utils/dom-render-svg'\n\nconst matchFont = s => ({ family, style = 'normal', weight = '400' } = {}) =>\n  family === (s.getPropertyValue('font-family') ?? '').replace(/['\"]/g, '') &&\n    style === (s.getPropertyValue('font-style') ?? 'normal') &&\n    weight === (s.getPropertyValue('font-weight') ?? '400')\n\nexport default ({\n  debug,\n  fonts\n}) => async (string, { x, y, width, height, style }) => {\n  if (!string) return\n\n  const g = $('g')\n\n  // Find font\n  const font = fonts.find(matchFont(style))\n  if (!font) throw new Error(`Cannot find font '${style.getPropertyValue('font-family')} ${style.getPropertyValue('font-style')} ${style.getPropertyValue('font-weight')}'`)\n\n  // Extract font metrics\n  const { unitsPerEm } = font.opentype\n  const ascender = font.opentype.tables.hhea.ascender\n  const descender = font.opentype.tables.hhea.descender\n\n  // Extract CSS props\n  const letterSpacing = style.getPropertyValue('letter-spacing')\n  const fontSize = parseFloat(style.getPropertyValue('font-size'))\n\n  // Compute metrics\n  const lineBox = (ascender - descender) / unitsPerEm\n  const leading = (fontSize * lineBox) - Math.abs(descender / unitsPerEm) * fontSize\n\n  // Render various metrics for debug\n  line('start', 0, { orientation: 'vertical', stroke: 'red' })\n  line('end', width, { orientation: 'vertical', stroke: 'red' })\n  line('leading', leading, { stroke: '#4b96ff' })\n\n  if (letterSpacing !== 'normal') {\n    // Render letter by letter in case of non-default letter-spacing\n    for (const c of string) {\n      $('path', {\n        d: font.opentype.getPath(c, x, y + leading, fontSize).toPathData(3),\n        fill: style.getPropertyValue('color')\n      }, g)\n      x += font.opentype.getAdvanceWidth(c, fontSize) + parseFloat(letterSpacing)\n    }\n  } else {\n    // Render string\n    $('path', {\n      d: font.opentype.getPath(string, x, y + leading, fontSize, {\n        features: {\n          // TODO extract from CSS props\n          liga: true,\n          rlig: true\n        }\n      }).toPathData(3),\n      fill: style.getPropertyValue('color')\n    }, g)\n  }\n\n  return g\n\n  function line (title, v, { orientation = 'horizontal', stroke = 'black' } = {}) {\n    return debug && $('line', {\n      title,\n      'data-value': v,\n      x1: orientation === 'horizontal' ? x : x + v,\n      x2: orientation === 'horizontal' ? x + width : x + v,\n      y1: orientation === 'horizontal' ? y + v : y,\n      y2: orientation === 'horizontal' ? y + v : y + height,\n      stroke,\n      class: 'debug'\n    }, g)\n  }\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n  if (!element.src) return\n\n  return $('image', {\n    x,\n    y,\n    width,\n    height,\n    href: element.src\n  })\n}\n","/* global Node */\nimport Opentype from 'opentype.js'\nimport walk from './utils/dom-walk'\nimport getZIndex from './utils/dom-get-zindex'\nimport getClientRects from './utils/range-get-client-rects'\n\nimport $ from './utils/dom-render-svg'\nimport * as RENDERERS from './renderers'\n\nexport default function (container = document.body, {\n  debug = false,\n  ignore = '',\n  fonts = []\n} = {}) {\n  // Init curried renderers\n  const renderers = {}\n  for (const k in RENDERERS) {\n    renderers[k] = RENDERERS[k]({ debug, fonts })\n  }\n\n  return {\n    // Preload all fonts before resolving\n    preload: async function () {\n      for (const font of fonts) {\n        if (font.opentype) continue\n        font.opentype = await new Promise(resolve => {\n          Opentype.load(font.url, (error, font) => {\n            if (error) throw error\n            resolve(font)\n          })\n        })\n      }\n    },\n\n    // Clear cache and delete all resources\n    flush: function () {\n      for (const font of fonts) delete font.opentype\n    },\n\n    // Render the HTML container as a shadow SVG\n    compute: async function () {\n      const viewBox = container.getBoundingClientRect()\n\n      // Create the SVG container\n      const svg = $('svg', {\n        viewBox: `0 0 ${viewBox.width} ${viewBox.height}`,\n        width: viewBox.width,\n        height: viewBox.height,\n        preserveAspectRatio: 'none'\n      })\n\n      // Set the parent to the current SVG.\n      // This parent will change during the walk\n      let parent = svg\n\n      // Render every children\n      await walk(container, async element => {\n        if (ignore && element !== container && element.matches(ignore)) return\n\n        // TODO opacity\n        const style = window.getComputedStyle(element)\n        const { x, y, width, height } = element.getBoundingClientRect()\n\n        // Handle CSS clip-path property\n        const clipPathValue = style.getPropertyValue('clip-path')\n        if (clipPathValue !== 'none') {\n          parent = $('g', null, svg)\n          // WARNING: CSS clip-path implementation is not done yet on arnaudjuracek/svg-to-pdf\n          parent.setAttribute('style', `clip-path: ${clipPathValue}`)\n        }\n\n        // Render element\n        const render = renderers[element.tagName] ?? renderers.div\n        const rendered = await render(element, {\n          x: x - viewBox.x,\n          y: y - viewBox.y,\n          width,\n          height,\n          style\n        })\n\n        if (rendered) parent.appendChild(rendered)\n\n        // Render text nodes inside the element\n        if (element.innerText) {\n          for (const node of element.childNodes) {\n            if (node.nodeType !== Node.TEXT_NODE) continue\n            if (!node.textContent.length) continue\n\n            // Text interface does not provide a .innerText method, which would be\n            // more appropriate than textContent as it skips non-rendered whitespaces\n            // Splitting white-space leading Text trick the browser to recompute\n            // the layout itself, dealing with implicit space between adjacent nodes\n            if (/^\\s/.test(node.textContent)) {\n              node.splitText(1)\n              continue\n            }\n\n            for (const { rect, fragment } of getClientRects(node)) {\n              try {\n                const text = await renderers.text(fragment.textContent.trimEnd(), {\n                  x: rect.x - viewBox.x,\n                  y: rect.y - viewBox.y,\n                  width: rect.width,\n                  height: rect.height,\n                  style\n                })\n                if (text) parent.appendChild(text)\n              } catch (error) {\n                // TODO[improve] error handling\n                console.warn(new Error(`Rendering failed for the following text: '${fragment.textContent}'`, { cause: error }))\n                console.warn(error)\n              }\n            }\n          }\n        }\n\n        // Continue walking\n        return true\n      }, {\n        sort: (a, b) => {\n          a.zIndex = a.zIndex ?? getZIndex(a)\n          b.zIndex = b.zIndex ?? getZIndex(b)\n          return a.zIndex - b.zIndex\n        }\n      })\n\n      return svg\n    }\n  }\n}\n","/* global DocumentFragment */\n\n// Return Range.clientRects with their corresponding DocumentFragment\nexport default function (node, text = node.innerText || node.textContent) {\n  const range = document.createRange()\n\n  const rects = []\n  for (let i = 0; i < node.length; i++) {\n    range.setStart(node, 0)\n    range.setEnd(node, (i + 1))\n\n    const clientRects = range.getClientRects()\n\n    const index = clientRects.length - 1\n    rects[index] = rects[index] ?? { text: '' }\n    rects[index].rect = clientRects[index]\n    rects[index].text += text.charAt(i)\n  }\n\n  return rects.map(rect => {\n    rect.fragment = new DocumentFragment()\n    rect.fragment.textContent = rect.text\n    return rect\n  })\n}\n"],"names":["_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","walk","element","_temp2","_ref$sort","sort","Promise","resolve","_callback","_temp","target","body","check","step","reject","_cycle","next","done","return","_fixup","TypeError","values","i","length","push","array","_forTo","_forOf","Array","from","children","child","getZIndex","el","zindex","window","getComputedStyle","getPropertyValue","parseInt","$","name","props","parent","NS","document","createElementNS","key","setAttributeNS","setAttribute","appendChild","div","_ref","_ref2","x","y","width","height","style","backgroundColor","startsWith","match","fill","rx","href","btoa","XMLSerializer","serializeToString","debug","fonts","string","_ref3","line","title","_ref4","_ref4$orientation","orientation","_ref4$stroke","stroke","x1","x2","y1","y2","class","g","font","find","_s$getPropertyValue","_s$getPropertyValue2","_s$getPropertyValue3","_ref$style","_ref$weight","weight","family","replace","Error","unitsPerEm","opentype","ascender","tables","hhea","descender","letterSpacing","fontSize","parseFloat","leading","Math","abs","_step","_iterator","_createForOfIteratorHelperLoose","c","d","getPath","toPathData","getAdvanceWidth","features","liga","rlig","toDataURL","src","container","_ref$debug","_ref$ignore","ignore","_ref$fonts","renderers","k","RENDERERS","preload","Opentype","load","url","error","_Promise","flush","compute","viewBox","getBoundingClientRect","svg","preserveAspectRatio","_renderers$element$ta","matches","_element$getBoundingC","clipPathValue","render","tagName","rendered","_temp4","innerText","childNodes","node","nodeType","Node","TEXT_NODE","textContent","test","text","range","createRange","rects","_rects$index","setStart","setEnd","clientRects","getClientRects","index","rect","charAt","map","fragment","DocumentFragment","_temp3","recover","trimEnd","_catch","console","warn","cause","splitText","a","b","_a$zIndex","_b$zIndex","zIndex"],"mappings":"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"}