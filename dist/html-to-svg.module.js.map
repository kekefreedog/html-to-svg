{"version":3,"file":"html-to-svg.module.js","sources":["../src/utils/dom-walk.js","../src/utils/dom-get-zindex.js","../src/utils/dom-render-svg.js","../src/renderers/div.js","../src/renderers/svg.js","../src/renderers/text.js","../src/renderers/canvas.js","../src/renderers/image.js","../src/index.js","../src/utils/range-get-client-rects.js"],"sourcesContent":["async function walk (element, callback, { sort = () => 1 } = {}) {\n  if (!await callback(element)) return\n\n  for (const child of Array.from(element.children).sort(sort)) {\n    await walk(child, callback, { sort })\n  }\n}\n\nexport default walk\n","export default el => {\n  const zindex = window.getComputedStyle(el).getPropertyValue('z-index')\n  return zindex === 'auto' ? 0 : parseInt(zindex ?? 0)\n}\n","export default function (name, props = {}, parent) {\n  const NS = 'http://www.w3.org/2000/svg'\n\n  const element = document.createElementNS(NS, name)\n  if (name === 'svg') element.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', NS)\n  for (const key in props) {\n    if (props[key] === null || props[key] === undefined) continue\n    element.setAttribute(key, props[key])\n  }\n\n  if (parent) parent.appendChild(element)\n  return element\n}\n","import $ from '../utils/dom-render-svg'\n\nfunction isTransparent (color) {\n  if (!color || color === 'none' || color === 'transparent') return true\n\n  if (color.startsWith('rgba')) {\n    const rgba = color.match(/[\\d.]+/g)\n    if (rgba[3] === '0') return true\n  }\n\n  return false\n}\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n\n  // TODO background-image\n  const backgroundColor = style.getPropertyValue('background-color')\n\n  // Skip visually empty blocks\n  if (isTransparent(backgroundColor)) return\n\n  // TODO SVG stroke is drawn on center, CSS stroke is drawn on outside\n  // TODO border-top|bottom|left|right\n  // TODO stroke-style\n  const stroke = {\n    stroke: 'none',\n    'stroke-width': 1\n  }\n  const borderColor = style.getPropertyValue('border-color')\n  const borderStyle = style.getPropertyValue('border-style')\n  if (borderStyle !== 'none' && !isTransparent(borderColor)) {\n    stroke.stroke = borderColor\n    stroke['stroke-width'] = style.getPropertyValue('border-width')\n  }\n\n  return $('rect', {\n    x,\n    y,\n    width,\n    height,\n    ...stroke,\n    fill: backgroundColor,\n    rx: parseInt(style.getPropertyValue('border-radius')) || null\n  })\n}\n","/* global FileReader, XMLSerializer, btoa, XMLHttpRequest */\nimport $ from '../utils/dom-render-svg'\n\nexport default ({ cache }) => async (element, { x, y, width, height, style }, {\n  rasterizeNestedSVG = true\n} = {}) => {\n  // Convert all image to dataURL to maximizime compatibility\n  for (const image of element.querySelectorAll('image[href]')) {\n    const src = image.getAttribute('href')\n\n    if (!cache.has(src)) {\n      // Fetch blob from image src\n      const blob = await new Promise(resolve => {\n        const request = new XMLHttpRequest()\n        request.open('GET', src, true)\n        request.responseType = 'blob'\n        request.onload = () => resolve(request.response)\n        request.send()\n      })\n\n      // Convert blob to dataURL using the FileReader API\n      const dataURL = await new Promise(resolve => {\n        const reader = new FileReader()\n        reader.onload = e => resolve(e.target.result)\n        reader.readAsDataURL(blob)\n      })\n\n      // Cache dataURL\n      cache.set(src, dataURL)\n    }\n\n    image.setAttribute('href', cache.get(src))\n  }\n\n  return rasterizeNestedSVG\n    ? $('image', {\n      x,\n      y,\n      width,\n      height,\n      href: 'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(element))\n    })\n    : (() => {\n        const svg = $('svg', {\n          x,\n          y,\n          width,\n          height,\n          viewbox: `0 0 ${width} ${height}`\n        })\n\n        svg.innerHTML = element.innerHTML\n        return svg\n      })()\n}\n","import $ from '../utils/dom-render-svg'\nimport fs from 'fs'\nimport path from 'path'\n\n// Utility function to convert a font file to a Base64 string\nconst fontToBase64 = (filePath) => {\n  const fontBuffer = fs.readFileSync(filePath)\n  return fontBuffer.toString('base64')\n}\n\nconst matchFont = s => ({ family, style = 'normal', weight = '400' } = {}) =>\n  family === (s.getPropertyValue('font-family') ?? '').replace(/['\"]/g, '') &&\n    style === (s.getPropertyValue('font-style') ?? 'normal') &&\n    weight === (s.getPropertyValue('font-weight') ?? '400')\n\nexport default ({ debug, fonts }) => async (string, { x, y, width, height, style }, {\n  splitText = false\n}) => {\n  if (!string) return\n\n  const g = $('g', { class: 'text-fragment' })\n\n  // Find the font\n  const font = fonts.find(matchFont(style))\n  if (!font) throw new Error(`Cannot find font '${style.getPropertyValue('font-family')} ${style.getPropertyValue('font-style')} ${style.getPropertyValue('font-weight')}'`)\n\n  // Convert the font file to Base64\n  const fontBase64 = fontToBase64(path.join(__dirname, font.url))\n\n  // Create a <style> element to embed the font in the SVG\n  const styleElement = $('style', {}, g)\n  styleElement.textContent = `\n    @font-face {\n      font-family: '${font.family}';\n      src: url(data:font/ttf;base64,${fontBase64}) format('truetype');\n      font-weight: ${font.weight};\n      font-style: ${font.style};\n    }\n  `\n\n  // Extract CSS properties\n  const letterSpacing = style.getPropertyValue('letter-spacing')\n  const fontSize = style.getPropertyValue('font-size')\n  const fill = style.getPropertyValue('color')\n\n  // Create a <text> element to render the text\n  const textElement = $('text', {\n    x: x,\n    y: y,\n    fill: fill,\n    'font-family': font.family,\n    'font-size': fontSize,\n    'font-weight': style.getPropertyValue('font-weight'),\n    'font-style': style.getPropertyValue('font-style'),\n    'letter-spacing': letterSpacing === 'normal' ? '0' : letterSpacing,\n    'dominant-baseline': 'hanging'\n  }, g)\n\n  textElement.textContent = string\n\n  return g\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: element.toDataURL('image/png')\n})\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n  if (!element.src) return\n\n  return $('image', {\n    x,\n    y,\n    width,\n    height,\n    href: element.src\n  })\n}\n","/* global Node */\nimport Opentype from 'opentype.js'\nimport walk from './utils/dom-walk'\nimport getZIndex from './utils/dom-get-zindex'\nimport getClientRects from './utils/range-get-client-rects'\n\nimport $ from './utils/dom-render-svg'\nimport * as RENDERERS from './renderers'\n\nexport default function ({\n  debug = false,\n  ignore = '',\n  fonts = []\n} = {}) {\n  const cache = new Map()\n\n  // Init curried renderers\n  const renderers = {}\n  for (const k in RENDERERS) {\n    renderers[k] = RENDERERS[k]({ debug, fonts, cache })\n  }\n\n  return {\n    get cache () { return cache },\n\n    // Preload all fonts before resolving\n    preload: async function () {\n      for (const font of fonts) {\n        if (font.opentype) continue\n        font.opentype = await new Promise(resolve => {\n          Opentype.load(font.url, (error, font) => {\n            if (error) throw error\n            resolve(font)\n          })\n        })\n      }\n    },\n\n    // Clear cache and delete all resources\n    destroy: function () {\n      cache.clear()\n      for (const font of fonts) delete font.opentype\n    },\n\n    // Render the HTML container as a shadow SVG\n    render: async function (container, options = {}, transform) {\n      const viewBox = container.getBoundingClientRect()\n\n      // Create the SVG container\n      const svg = $('svg', {\n        viewBox: `0 0 ${viewBox.width} ${viewBox.height}`,\n        width: viewBox.width,\n        height: viewBox.height,\n        preserveAspectRatio: 'none'\n      })\n\n      // Set the parent to the current SVG.\n      // This parent will change during the walk\n      let parent = svg\n\n      // Render every children\n      await walk(container, async element => {\n        if (ignore && element !== container && element.matches(ignore)) return\n\n        const style = window.getComputedStyle(element)\n        const { x, y, width, height } = element.getBoundingClientRect()\n\n        if (element instanceof window.HTMLElement) {\n          // TODO opacity\n\n          // Handle CSS clip-path property\n          const clipPathValue = style.getPropertyValue('clip-path')\n          if (clipPathValue !== 'none') {\n            parent = $('g', null, svg)\n            // WARNING: CSS clip-path implementation is not done yet on arnaudjuracek/svg-to-pdf\n            parent.setAttribute('style', `clip-path: ${clipPathValue.replace(/\"/g, \"'\")}`)\n          }\n        }\n\n        // Render element\n        const render = renderers[element.tagName] ?? renderers.div\n        let rendered = await render(element, {\n          x: x - viewBox.x,\n          y: y - viewBox.y,\n          width,\n          height,\n          style\n        }, options)\n\n        if (transform) rendered = await transform(element, rendered)\n        if (rendered) parent.appendChild(rendered)\n\n        // Render text nodes inside the element\n        if (element.innerText && element.childNodes.length) {\n          const g = $('g', { class: 'text' })\n\n          for (const node of element.childNodes) {\n            if (node.nodeType !== Node.TEXT_NODE) continue\n            if (!node.textContent.length) continue\n\n            // Text interface does not provide a .innerText method, which would be\n            // more appropriate than textContent as it skips non-rendered whitespaces\n            // Splitting white-space leading Text trick the browser to recompute\n            // the layout itself, dealing with implicit space between adjacent nodes\n            if (/^\\s/.test(node.textContent)) {\n              node.splitText(1)\n              continue\n            }\n\n            for (const { rect, fragment } of getClientRects(node)) {\n              try {\n                let text = await renderers.text(fragment.textContent.trimEnd(), {\n                  x: rect.x - viewBox.x,\n                  y: rect.y - viewBox.y,\n                  width: rect.width,\n                  height: rect.height,\n                  style\n                }, options)\n\n                if (transform) text = await transform(element, text)\n                if (text) g.appendChild(text)\n              } catch (error) {\n                // TODO[improve] error handling\n                console.warn(new Error(`Rendering failed for the following text: '${fragment.textContent}'`, { cause: error }))\n                console.warn(error)\n              }\n            }\n          }\n\n          if (g.children.length) parent.appendChild(g)\n        }\n\n        // Continue walking\n        return true\n      }, {\n        sort: (a, b) => {\n          a.zIndex = a.zIndex ?? getZIndex(a)\n          b.zIndex = b.zIndex ?? getZIndex(b)\n          return a.zIndex - b.zIndex\n        }\n      })\n\n      return svg\n    }\n  }\n}\n","/* global DocumentFragment */\n\n// Return Range.clientRects with their corresponding DocumentFragment\nexport default function (node, text = node.innerText || node.textContent) {\n  const range = document.createRange()\n\n  const rects = []\n  for (let i = 0; i < node.length; i++) {\n    range.setStart(node, 0)\n    range.setEnd(node, (i + 1))\n\n    const clientRects = range.getClientRects()\n\n    const index = clientRects.length - 1\n    rects[index] = rects[index] ?? { text: '' }\n    rects[index].rect = clientRects[index]\n    rects[index].text += text.charAt(i)\n  }\n\n  return rects.map(rect => {\n    rect.fragment = new DocumentFragment()\n    rect.fragment.textContent = rect.text\n    return rect\n  })\n}\n"],"names":["_iteratorSymbol","Symbol","iterator","_settle","pact","state","value","s","_Pact","o","bind","v","then","observer","prototype","onFulfilled","onRejected","result","this","callback","e","_this","_isSettledPact","thenable","walk","element","_temp2","_ref$sort","sort","Promise","resolve","_callback","_temp","target","body","check","step","reject","_cycle","next","done","return","_fixup","TypeError","values","i","length","push","array","_forTo","_forOf","Array","from","children","child","getZIndex","el","zindex","window","getComputedStyle","getPropertyValue","parseInt","$","name","props","parent","NS","document","createElementNS","key","setAttributeNS","setAttribute","appendChild","isTransparent","color","startsWith","match","div","_ref","_ref2","x","y","width","height","style","backgroundColor","stroke","borderColor","_extends","fill","rx","svg","cache","_temp5","_ref3$rasterizeNested","rasterizeNestedSVG","_temp4","href","btoa","XMLSerializer","serializeToString","viewbox","innerHTML","_temp3","querySelectorAll","image","get","src","getAttribute","has","request","XMLHttpRequest","open","responseType","onload","response","send","blob","reader","FileReader","readAsDataURL","dataURL","set","fonts","string","_ref3","_ref4","filePath","g","class","font","find","_s$getPropertyValue","_s$getPropertyValue2","_s$getPropertyValue3","_ref$style","_ref$weight","weight","family","replace","Error","fontBase64","path","join","__dirname","url","fs","readFileSync","toString","textContent","letterSpacing","fontSize","toDataURL","_ref$debug","debug","_ref$ignore","ignore","_ref$fonts","Map","renderers","k","RENDERERS","preload","opentype","Opentype","load","error","_Promise","destroy","clear","_iterator","_step","_createForOfIteratorHelperLoose","render","container","options","transform","viewBox","getBoundingClientRect","preserveAspectRatio","_renderers$element$ta","matches","_element$getBoundingC","HTMLElement","clipPathValue","tagName","rendered","_temp10","_temp8","innerText","childNodes","_temp7","_temp6","node","nodeType","Node","TEXT_NODE","test","text","range","createRange","rects","_rects$index","setStart","setEnd","clientRects","getClientRects","index","rect","charAt","map","fragment","DocumentFragment","recover","trimEnd","_transform2","_catch","console","warn","cause","splitText","_temp9","_transform","a","b","_a$zIndex","_b$zIndex","zIndex"],"mappings":"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"}